variables:
    STORAGE_DRIVER: "vfs"

stages:
    - build
    - release

build linux:
    image: rust:latest
    stage: build
    script:
        - cargo build --release
    artifacts:
        paths:
            - ./target/release/discordsc

build windows:
    image: rust:latest
    stage: build
    before_script:
        - apt update
        - apt install gcc-mingw-w64 -y
        - rustup target add x86_64-pc-windows-gnu
    script:
        - cargo build --release --target x86_64-pc-windows-gnu
    artifacts:
        paths:
            - ./target/x86_64-pc-windows-gnu/release/discordsc.exe

build container:
    image: messense/rust-musl-cross:x86_64-musl
    stage: build
    before_script:
        - apt update
        - apt install musl-tools -y
        - rustup target add x86_64-unknown-linux-musl
    script:
        - cargo build --release --target x86_64-unknown-linux-musl
    artifacts:
        paths:
            - ./target/x86_64-unknown-linux-musl/release/discordsc

release linux:
    image: rust:latest
    stage: release
    script:
        - mkdir -p release/data
        - cp data/example.json release/data/config.json
        - cp target/release/discordsc release
        - cd release
        - tar -czvf ../discordsc-rs-linux64.tar.gz ./
    artifacts:
        paths:
            - ./discordsc-rs-linux64.tar.gz

release windows:
    image: rust:latest
    stage: release
    before_script:
        - apt update
        - apt install zip -y
    script:
        - mkdir -p release/data
        - cp data/example.json release/data/config.json
        - cp target/x86_64-pc-windows-gnu/release/discordsc.exe release
        - cd release
        - zip -r ../discordsc-rs-win64.zip ./
    artifacts:
        paths:
            - ./discordsc-rs-win64.zip

release container:
    image: quay.io/buildah/stable:latest
    stage: release
    before_script:
        - buildah login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
        - cp ./target/x86_64-unknown-linux-musl/release/discordsc .
        - cp ./data/example.json ./data/config.json
        - cp ./build/Dockerfile .
    script:
        - buildah bud --pull -t "$CI_REGISTRY_IMAGE" .
        - buildah push "$CI_REGISTRY_IMAGE"
    only:
        - master
